cmake_minimum_required(VERSION 3.12)
project(TradingSimulator)

set(CMAKE_CXX_STANDARD 11)

# Set the directory where the shared objects will be generated
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/libraries)

# Include directories
include_directories(include)

# Source files
set(SOURCES src/main.cpp src/config_parser.cpp src/trading_algorithm.cpp)

# Add executable
add_executable(TradingSimulator ${SOURCES})

# Find required libraries
find_package(YamlCpp REQUIRED)
find_package(Dlfcn REQUIRED)

# Add libraries
target_link_libraries(TradingSimulator PRIVATE YamlCpp::YamlCpp dl)

# Set the directory where the shared objects are located
set(STRATEGIES_DIR ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/strats)

# Add a custom command to create the strategies directory
    add_custom_command(
    TARGET TradingSimulator POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory ${STRATEGIES_DIR}

            )

# Function to create a shared object for a trading strategy
function(add_strategy TARGET_NAME SOURCE_NAME)
    # Set the shared object name
    set(SHARED_OBJECT_NAME ${TARGET_NAME}.so)

    # Add the library target
    add_library(${TARGET_NAME} SHARED ${SOURCE_NAME})

    # Set the shared object output directory
    set_target_properties(${TARGET_NAME} PROPERTIES
        LIBRARY_OUTPUT_DIRECTORY ${STRATEGIES_DIR}
    )

    # Add a custom command to rename the shared object
    add_custom_command(
        TARGET ${TARGET_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E rename $<TARGET_FILE:${TARGET_NAME}> ${SHARED_OBJECT_NAME}
        WORKING_DIRECTORY ${STRATEGIES_DIR}
    
            )

    # Print a message about the created shared object
    message(STATUS "Created shared object: ${STRATEGIES_DIR}/${SHARED_OBJECT_NAME}")
endfunction()

# Add the trading strategies
add_strategy(Algo1 strategies/algo1.cpp)
add_strategy(Algo2 strategies/algo2.cpp)

